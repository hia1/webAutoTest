INFO	2023-01-09 09:54:10,234	[Server.py:42]	['appium -p 4723  -U 127.0.0.1:21503', 'appium -p 4740  -U 127.0.0.1:21513']
DEBUG	2023-01-09 09:54:12,469	[remote_connection.py:308]	POST http://127.0.0.1:4723/wd/hub/session {"capabilities": {"firstMatch": [{}], "alwaysMatch": {"platformName": "Android", "appium:deviceName": "127.0.0.1:21503", "appium:platformVersion": "7.1.2", "appium:appPackage": "com.tal.kaoyan", "appium:appActivity": "ui.activity.SplashActivity", "appium:noReset": false, "appium:unicodeKeyboard": true, "appium:resetKeyboard": true, "appium:automationName": "uiautomator2"}}}
DEBUG	2023-01-09 09:54:12,469	[connectionpool.py:232]	Starting new HTTP connection (1): 127.0.0.1:4723
DEBUG	2023-01-09 09:54:14,476	[retry.py:594]	Incremented Retry for (url='/wd/hub/session'): Retry(total=2, connect=None, read=None, redirect=None, status=None)
WARNING	2023-01-09 09:54:14,477	[connectionpool.py:813]	Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x0000027761FD06C8>: Failed to establish a new connection: [WinError 10061] 由于目标计算机积极拒绝，无法连接。')': /wd/hub/session
DEBUG	2023-01-09 09:54:14,478	[connectionpool.py:232]	Starting new HTTP connection (2): 127.0.0.1:4723
DEBUG	2023-01-09 09:54:16,481	[retry.py:594]	Incremented Retry for (url='/wd/hub/session'): Retry(total=1, connect=None, read=None, redirect=None, status=None)
WARNING	2023-01-09 09:54:16,481	[connectionpool.py:813]	Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x0000027761FDF548>: Failed to establish a new connection: [WinError 10061] 由于目标计算机积极拒绝，无法连接。')': /wd/hub/session
DEBUG	2023-01-09 09:54:16,481	[connectionpool.py:232]	Starting new HTTP connection (3): 127.0.0.1:4723
DEBUG	2023-01-09 09:54:18,485	[retry.py:594]	Incremented Retry for (url='/wd/hub/session'): Retry(total=0, connect=None, read=None, redirect=None, status=None)
WARNING	2023-01-09 09:54:18,485	[connectionpool.py:813]	Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x0000027761FDFE08>: Failed to establish a new connection: [WinError 10061] 由于目标计算机积极拒绝，无法连接。')': /wd/hub/session
DEBUG	2023-01-09 09:54:18,485	[connectionpool.py:232]	Starting new HTTP connection (4): 127.0.0.1:4723
DEBUG	2023-01-09 09:54:29,816	[connectionpool.py:465]	http://127.0.0.1:4723 "POST /wd/hub/session HTTP/1.1" 200 1091
DEBUG	2023-01-09 09:54:29,816	[remote_connection.py:330]	Remote response: status=200 | data={"value":{"capabilities":{"platform":"LINUX","webStorageEnabled":false,"takesScreenshot":true,"javascriptEnabled":true,"databaseEnabled":false,"networkConnectionEnabled":true,"locationContextEnabled":false,"warnings":{},"desired":{"platformName":"Android","deviceName":"127.0.0.1:21503","platformVersion":"7.1.2","appPackage":"com.tal.kaoyan","appActivity":"ui.activity.SplashActivity","noReset":false,"unicodeKeyboard":true,"resetKeyboard":true,"automationName":"uiautomator2","udid":"127.0.0.1:21503"},"platformName":"Android","deviceName":"127.0.0.1:21503","platformVersion":"7.1.2","appPackage":"com.tal.kaoyan","appActivity":"ui.activity.SplashActivity","noReset":false,"unicodeKeyboard":true,"resetKeyboard":true,"automationName":"uiautomator2","udid":"127.0.0.1:21503","deviceUDID":"127.0.0.1:21503","deviceApiLevel":25,"deviceScreenSize":"720x1280","deviceScreenDensity":240,"deviceModel":"OPPO R11 Plus","deviceManufacturer":"OPPO","pixelRatio":1.5,"statBarHeight":36,"viewportRect":{"left":0,"top":36,"width":720,"height":1244}},"sessionId":"864753be-2cf0-4668-9a2f-fc0b668ea511"}} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '1091', 'ETag': 'W/"443-vspogrGc5Qe9ya6wPAto8D1PqQY"', 'Date': 'Mon, 09 Jan 2023 01:54:29 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})
DEBUG	2023-01-09 09:54:29,817	[remote_connection.py:358]	Finished Request
INFO	2023-01-09 09:54:29,817	[Server.py:101]	<appium.webdriver.webdriver.WebDriver (session="864753be-2cf0-4668-9a2f-fc0b668ea511")>
DEBUG	2023-01-09 09:54:29,817	[remote_connection.py:308]	POST http://127.0.0.1:4740/wd/hub/session {"capabilities": {"firstMatch": [{}], "alwaysMatch": {"platformName": "Android", "appium:deviceName": "127.0.0.1:21513", "appium:platformVersion": "7.1.2", "appium:appPackage": "com.tal.kaoyan", "appium:appActivity": "ui.activity.SplashActivity", "appium:noReset": false, "appium:unicodeKeyboard": true, "appium:resetKeyboard": true, "appium:automationName": "uiautomator2"}}}
DEBUG	2023-01-09 09:54:29,818	[connectionpool.py:232]	Starting new HTTP connection (1): 127.0.0.1:4740
DEBUG	2023-01-09 09:54:38,674	[connectionpool.py:465]	http://127.0.0.1:4740 "POST /wd/hub/session HTTP/1.1" 200 1091
DEBUG	2023-01-09 09:54:38,674	[remote_connection.py:330]	Remote response: status=200 | data={"value":{"capabilities":{"platform":"LINUX","webStorageEnabled":false,"takesScreenshot":true,"javascriptEnabled":true,"databaseEnabled":false,"networkConnectionEnabled":true,"locationContextEnabled":false,"warnings":{},"desired":{"platformName":"Android","deviceName":"127.0.0.1:21513","platformVersion":"7.1.2","appPackage":"com.tal.kaoyan","appActivity":"ui.activity.SplashActivity","noReset":false,"unicodeKeyboard":true,"resetKeyboard":true,"automationName":"uiautomator2","udid":"127.0.0.1:21513"},"platformName":"Android","deviceName":"127.0.0.1:21513","platformVersion":"7.1.2","appPackage":"com.tal.kaoyan","appActivity":"ui.activity.SplashActivity","noReset":false,"unicodeKeyboard":true,"resetKeyboard":true,"automationName":"uiautomator2","udid":"127.0.0.1:21513","deviceUDID":"127.0.0.1:21513","deviceApiLevel":25,"deviceScreenSize":"1080x1920","deviceScreenDensity":360,"deviceModel":"VOG-AL00","deviceManufacturer":"HUAWEI","pixelRatio":2.25,"statBarHeight":54,"viewportRect":{"left":0,"top":54,"width":1080,"height":1866}},"sessionId":"564ab553-6206-40d5-ac5c-d0db97c4fcce"}} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '1091', 'ETag': 'W/"443-RyvmVKzOcdWxWcY0MTBNjT4u1a8"', 'Date': 'Mon, 09 Jan 2023 01:54:38 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})
DEBUG	2023-01-09 09:54:38,674	[remote_connection.py:358]	Finished Request
INFO	2023-01-09 09:54:38,675	[Server.py:101]	<appium.webdriver.webdriver.WebDriver (session="564ab553-6206-40d5-ac5c-d0db97c4fcce")>
INFO	2023-01-09 09:54:54,966	[Server.py:42]	['appium -p 4723  -U 127.0.0.1:21503', 'appium -p 4740  -U 127.0.0.1:21513']
DEBUG	2023-01-09 09:54:57,288	[remote_connection.py:308]	POST http://127.0.0.1:4723/wd/hub/session {"capabilities": {"firstMatch": [{}], "alwaysMatch": {"platformName": "Android", "appium:deviceName": "127.0.0.1:21503", "appium:platformVersion": "7.1.2", "appium:appPackage": "com.tal.kaoyan", "appium:appActivity": "ui.activity.SplashActivity", "appium:noReset": false, "appium:unicodeKeyboard": true, "appium:resetKeyboard": true, "appium:automationName": "uiautomator2"}}}
DEBUG	2023-01-09 09:54:57,289	[connectionpool.py:232]	Starting new HTTP connection (1): 127.0.0.1:4723
DEBUG	2023-01-09 09:55:05,245	[connectionpool.py:465]	http://127.0.0.1:4723 "POST /wd/hub/session HTTP/1.1" 200 1091
DEBUG	2023-01-09 09:55:05,245	[remote_connection.py:330]	Remote response: status=200 | data={"value":{"capabilities":{"platform":"LINUX","webStorageEnabled":false,"takesScreenshot":true,"javascriptEnabled":true,"databaseEnabled":false,"networkConnectionEnabled":true,"locationContextEnabled":false,"warnings":{},"desired":{"platformName":"Android","deviceName":"127.0.0.1:21503","platformVersion":"7.1.2","appPackage":"com.tal.kaoyan","appActivity":"ui.activity.SplashActivity","noReset":false,"unicodeKeyboard":true,"resetKeyboard":true,"automationName":"uiautomator2","udid":"127.0.0.1:21503"},"platformName":"Android","deviceName":"127.0.0.1:21503","platformVersion":"7.1.2","appPackage":"com.tal.kaoyan","appActivity":"ui.activity.SplashActivity","noReset":false,"unicodeKeyboard":true,"resetKeyboard":true,"automationName":"uiautomator2","udid":"127.0.0.1:21503","deviceUDID":"127.0.0.1:21503","deviceApiLevel":25,"deviceScreenSize":"720x1280","deviceScreenDensity":240,"deviceModel":"OPPO R11 Plus","deviceManufacturer":"OPPO","pixelRatio":1.5,"statBarHeight":36,"viewportRect":{"left":0,"top":36,"width":720,"height":1244}},"sessionId":"585ef330-e3f8-42dd-9212-def2628993e4"}} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '1091', 'ETag': 'W/"443-ILstqn+iASTYCpdLwupa/fB7qAQ"', 'Date': 'Mon, 09 Jan 2023 01:55:05 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})
DEBUG	2023-01-09 09:55:05,246	[remote_connection.py:358]	Finished Request
INFO	2023-01-09 09:55:05,246	[Server.py:101]	<appium.webdriver.webdriver.WebDriver (session="585ef330-e3f8-42dd-9212-def2628993e4")>
DEBUG	2023-01-09 09:55:05,246	[remote_connection.py:308]	POST http://127.0.0.1:4740/wd/hub/session {"capabilities": {"firstMatch": [{}], "alwaysMatch": {"platformName": "Android", "appium:deviceName": "127.0.0.1:21513", "appium:platformVersion": "7.1.2", "appium:appPackage": "com.tal.kaoyan", "appium:appActivity": "ui.activity.SplashActivity", "appium:noReset": false, "appium:unicodeKeyboard": true, "appium:resetKeyboard": true, "appium:automationName": "uiautomator2"}}}
DEBUG	2023-01-09 09:55:05,247	[connectionpool.py:232]	Starting new HTTP connection (1): 127.0.0.1:4740
DEBUG	2023-01-09 09:55:13,001	[connectionpool.py:465]	http://127.0.0.1:4740 "POST /wd/hub/session HTTP/1.1" 200 1091
DEBUG	2023-01-09 09:55:13,002	[remote_connection.py:330]	Remote response: status=200 | data={"value":{"capabilities":{"platform":"LINUX","webStorageEnabled":false,"takesScreenshot":true,"javascriptEnabled":true,"databaseEnabled":false,"networkConnectionEnabled":true,"locationContextEnabled":false,"warnings":{},"desired":{"platformName":"Android","deviceName":"127.0.0.1:21513","platformVersion":"7.1.2","appPackage":"com.tal.kaoyan","appActivity":"ui.activity.SplashActivity","noReset":false,"unicodeKeyboard":true,"resetKeyboard":true,"automationName":"uiautomator2","udid":"127.0.0.1:21513"},"platformName":"Android","deviceName":"127.0.0.1:21513","platformVersion":"7.1.2","appPackage":"com.tal.kaoyan","appActivity":"ui.activity.SplashActivity","noReset":false,"unicodeKeyboard":true,"resetKeyboard":true,"automationName":"uiautomator2","udid":"127.0.0.1:21513","deviceUDID":"127.0.0.1:21513","deviceApiLevel":25,"deviceScreenSize":"1080x1920","deviceScreenDensity":360,"deviceModel":"VOG-AL00","deviceManufacturer":"HUAWEI","pixelRatio":2.25,"statBarHeight":54,"viewportRect":{"left":0,"top":54,"width":1080,"height":1866}},"sessionId":"4ec33e2e-1edc-4492-86ca-999473de2a43"}} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '1091', 'ETag': 'W/"443-h3vu1SEF4JSEfl/MeMyBac2/1Ec"', 'Date': 'Mon, 09 Jan 2023 01:55:13 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})
DEBUG	2023-01-09 09:55:13,002	[remote_connection.py:358]	Finished Request
INFO	2023-01-09 09:55:13,002	[Server.py:101]	<appium.webdriver.webdriver.WebDriver (session="4ec33e2e-1edc-4492-86ca-999473de2a43")>
INFO	2023-01-09 09:58:46,645	[Server.py:42]	['appium -p 4723  -U 127.0.0.1:21503', 'appium -p 4740  -U 127.0.0.1:21513']
DEBUG	2023-01-09 09:58:48,877	[remote_connection.py:308]	POST http://127.0.0.1:4723/wd/hub/session {"capabilities": {"firstMatch": [{}], "alwaysMatch": {"platformName": "Android", "appium:deviceName": "127.0.0.1:21503", "appium:platformVersion": "7.1.2", "appium:appPackage": "com.tal.kaoyan", "appium:appActivity": "ui.activity.SplashActivity", "appium:noReset": false, "appium:unicodeKeyboard": true, "appium:resetKeyboard": true, "appium:automationName": "uiautomator2"}}}
DEBUG	2023-01-09 09:58:48,877	[connectionpool.py:232]	Starting new HTTP connection (1): 127.0.0.1:4723
DEBUG	2023-01-09 09:58:57,564	[connectionpool.py:465]	http://127.0.0.1:4723 "POST /wd/hub/session HTTP/1.1" 200 1091
DEBUG	2023-01-09 09:58:57,565	[remote_connection.py:330]	Remote response: status=200 | data={"value":{"capabilities":{"platform":"LINUX","webStorageEnabled":false,"takesScreenshot":true,"javascriptEnabled":true,"databaseEnabled":false,"networkConnectionEnabled":true,"locationContextEnabled":false,"warnings":{},"desired":{"platformName":"Android","deviceName":"127.0.0.1:21503","platformVersion":"7.1.2","appPackage":"com.tal.kaoyan","appActivity":"ui.activity.SplashActivity","noReset":false,"unicodeKeyboard":true,"resetKeyboard":true,"automationName":"uiautomator2","udid":"127.0.0.1:21503"},"platformName":"Android","deviceName":"127.0.0.1:21503","platformVersion":"7.1.2","appPackage":"com.tal.kaoyan","appActivity":"ui.activity.SplashActivity","noReset":false,"unicodeKeyboard":true,"resetKeyboard":true,"automationName":"uiautomator2","udid":"127.0.0.1:21503","deviceUDID":"127.0.0.1:21503","deviceApiLevel":25,"deviceScreenSize":"720x1280","deviceScreenDensity":240,"deviceModel":"OPPO R11 Plus","deviceManufacturer":"OPPO","pixelRatio":1.5,"statBarHeight":36,"viewportRect":{"left":0,"top":36,"width":720,"height":1244}},"sessionId":"1ff5c5f2-96b7-4398-b87a-f0b6445b2a83"}} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '1091', 'ETag': 'W/"443-fIO2nP54C8BDZrgvQ20vlHyddYc"', 'Date': 'Mon, 09 Jan 2023 01:58:57 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})
DEBUG	2023-01-09 09:58:57,565	[remote_connection.py:358]	Finished Request
INFO	2023-01-09 09:58:57,565	[Server.py:101]	<appium.webdriver.webdriver.WebDriver (session="1ff5c5f2-96b7-4398-b87a-f0b6445b2a83")>
DEBUG	2023-01-09 09:58:57,566	[remote_connection.py:308]	POST http://127.0.0.1:4740/wd/hub/session {"capabilities": {"firstMatch": [{}], "alwaysMatch": {"platformName": "Android", "appium:deviceName": "127.0.0.1:21513", "appium:platformVersion": "7.1.2", "appium:appPackage": "com.tal.kaoyan", "appium:appActivity": "ui.activity.SplashActivity", "appium:noReset": false, "appium:unicodeKeyboard": true, "appium:resetKeyboard": true, "appium:automationName": "uiautomator2"}}}
DEBUG	2023-01-09 09:58:57,566	[connectionpool.py:232]	Starting new HTTP connection (1): 127.0.0.1:4740
DEBUG	2023-01-09 09:59:06,362	[connectionpool.py:465]	http://127.0.0.1:4740 "POST /wd/hub/session HTTP/1.1" 200 1091
DEBUG	2023-01-09 09:59:06,362	[remote_connection.py:330]	Remote response: status=200 | data={"value":{"capabilities":{"platform":"LINUX","webStorageEnabled":false,"takesScreenshot":true,"javascriptEnabled":true,"databaseEnabled":false,"networkConnectionEnabled":true,"locationContextEnabled":false,"warnings":{},"desired":{"platformName":"Android","deviceName":"127.0.0.1:21513","platformVersion":"7.1.2","appPackage":"com.tal.kaoyan","appActivity":"ui.activity.SplashActivity","noReset":false,"unicodeKeyboard":true,"resetKeyboard":true,"automationName":"uiautomator2","udid":"127.0.0.1:21513"},"platformName":"Android","deviceName":"127.0.0.1:21513","platformVersion":"7.1.2","appPackage":"com.tal.kaoyan","appActivity":"ui.activity.SplashActivity","noReset":false,"unicodeKeyboard":true,"resetKeyboard":true,"automationName":"uiautomator2","udid":"127.0.0.1:21513","deviceUDID":"127.0.0.1:21513","deviceApiLevel":25,"deviceScreenSize":"1080x1920","deviceScreenDensity":360,"deviceModel":"VOG-AL00","deviceManufacturer":"HUAWEI","pixelRatio":2.25,"statBarHeight":54,"viewportRect":{"left":0,"top":54,"width":1080,"height":1866}},"sessionId":"7a77cc2a-b51d-44a6-b650-07ee4ab7ac19"}} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '1091', 'ETag': 'W/"443-KxIh+VsUjSPnrPhdNoLzspKeWuQ"', 'Date': 'Mon, 09 Jan 2023 01:59:06 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})
DEBUG	2023-01-09 09:59:06,363	[remote_connection.py:358]	Finished Request
INFO	2023-01-09 09:59:06,363	[Server.py:101]	<appium.webdriver.webdriver.WebDriver (session="7a77cc2a-b51d-44a6-b650-07ee4ab7ac19")>
INFO	2023-01-09 10:00:02,629	[Server.py:42]	['appium -p 4723  -U 127.0.0.1:21503', 'appium -p 4740  -U 127.0.0.1:21513']
DEBUG	2023-01-09 10:00:04,988	[remote_connection.py:308]	POST http://127.0.0.1:4723/wd/hub/session {"capabilities": {"firstMatch": [{}], "alwaysMatch": {"platformName": "Android", "appium:deviceName": "127.0.0.1:21503", "appium:platformVersion": "7.1.2", "appium:appPackage": "com.tal.kaoyan", "appium:appActivity": "ui.activity.SplashActivity", "appium:noReset": false, "appium:unicodeKeyboard": true, "appium:resetKeyboard": true, "appium:automationName": "uiautomator2"}}}
DEBUG	2023-01-09 10:00:04,988	[connectionpool.py:232]	Starting new HTTP connection (1): 127.0.0.1:4723
DEBUG	2023-01-09 10:00:14,584	[connectionpool.py:465]	http://127.0.0.1:4723 "POST /wd/hub/session HTTP/1.1" 200 1091
DEBUG	2023-01-09 10:00:14,584	[remote_connection.py:330]	Remote response: status=200 | data={"value":{"capabilities":{"platform":"LINUX","webStorageEnabled":false,"takesScreenshot":true,"javascriptEnabled":true,"databaseEnabled":false,"networkConnectionEnabled":true,"locationContextEnabled":false,"warnings":{},"desired":{"platformName":"Android","deviceName":"127.0.0.1:21503","platformVersion":"7.1.2","appPackage":"com.tal.kaoyan","appActivity":"ui.activity.SplashActivity","noReset":false,"unicodeKeyboard":true,"resetKeyboard":true,"automationName":"uiautomator2","udid":"127.0.0.1:21503"},"platformName":"Android","deviceName":"127.0.0.1:21503","platformVersion":"7.1.2","appPackage":"com.tal.kaoyan","appActivity":"ui.activity.SplashActivity","noReset":false,"unicodeKeyboard":true,"resetKeyboard":true,"automationName":"uiautomator2","udid":"127.0.0.1:21503","deviceUDID":"127.0.0.1:21503","deviceApiLevel":25,"deviceScreenSize":"720x1280","deviceScreenDensity":240,"deviceModel":"OPPO R11 Plus","deviceManufacturer":"OPPO","pixelRatio":1.5,"statBarHeight":36,"viewportRect":{"left":0,"top":36,"width":720,"height":1244}},"sessionId":"1280165c-10ea-4a29-8e38-3628cf9c79cc"}} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '1091', 'ETag': 'W/"443-lIOLkJnNsqwCXelswDBaNWMVm1g"', 'Date': 'Mon, 09 Jan 2023 02:00:14 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})
DEBUG	2023-01-09 10:00:14,584	[remote_connection.py:358]	Finished Request
INFO	2023-01-09 10:00:14,585	[Server.py:101]	<appium.webdriver.webdriver.WebDriver (session="1280165c-10ea-4a29-8e38-3628cf9c79cc")>
DEBUG	2023-01-09 10:00:14,585	[remote_connection.py:308]	POST http://127.0.0.1:4740/wd/hub/session {"capabilities": {"firstMatch": [{}], "alwaysMatch": {"platformName": "Android", "appium:deviceName": "127.0.0.1:21513", "appium:platformVersion": "7.1.2", "appium:appPackage": "com.tal.kaoyan", "appium:appActivity": "ui.activity.SplashActivity", "appium:noReset": false, "appium:unicodeKeyboard": true, "appium:resetKeyboard": true, "appium:automationName": "uiautomator2"}}}
DEBUG	2023-01-09 10:00:14,585	[connectionpool.py:232]	Starting new HTTP connection (1): 127.0.0.1:4740
DEBUG	2023-01-09 10:00:24,429	[connectionpool.py:465]	http://127.0.0.1:4740 "POST /wd/hub/session HTTP/1.1" 200 1091
DEBUG	2023-01-09 10:00:24,429	[remote_connection.py:330]	Remote response: status=200 | data={"value":{"capabilities":{"platform":"LINUX","webStorageEnabled":false,"takesScreenshot":true,"javascriptEnabled":true,"databaseEnabled":false,"networkConnectionEnabled":true,"locationContextEnabled":false,"warnings":{},"desired":{"platformName":"Android","deviceName":"127.0.0.1:21513","platformVersion":"7.1.2","appPackage":"com.tal.kaoyan","appActivity":"ui.activity.SplashActivity","noReset":false,"unicodeKeyboard":true,"resetKeyboard":true,"automationName":"uiautomator2","udid":"127.0.0.1:21513"},"platformName":"Android","deviceName":"127.0.0.1:21513","platformVersion":"7.1.2","appPackage":"com.tal.kaoyan","appActivity":"ui.activity.SplashActivity","noReset":false,"unicodeKeyboard":true,"resetKeyboard":true,"automationName":"uiautomator2","udid":"127.0.0.1:21513","deviceUDID":"127.0.0.1:21513","deviceApiLevel":25,"deviceScreenSize":"1080x1920","deviceScreenDensity":360,"deviceModel":"VOG-AL00","deviceManufacturer":"HUAWEI","pixelRatio":2.25,"statBarHeight":54,"viewportRect":{"left":0,"top":54,"width":1080,"height":1866}},"sessionId":"a70b439d-9986-4568-a961-9efaeb6addea"}} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '1091', 'ETag': 'W/"443-Cxub1ecK3zO3bStD6RV/P113WLk"', 'Date': 'Mon, 09 Jan 2023 02:00:24 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})
DEBUG	2023-01-09 10:00:24,430	[remote_connection.py:358]	Finished Request
INFO	2023-01-09 10:00:24,430	[Server.py:101]	<appium.webdriver.webdriver.WebDriver (session="a70b439d-9986-4568-a961-9efaeb6addea")>
INFO	2023-01-09 10:01:38,415	[Server.py:42]	['appium -p 4723  -U 127.0.0.1:21503', 'appium -p 4740  -U 127.0.0.1:21513']
DEBUG	2023-01-09 10:01:40,700	[remote_connection.py:308]	POST http://127.0.0.1:4723/wd/hub/session {"capabilities": {"firstMatch": [{}], "alwaysMatch": {"platformName": "Android", "appium:deviceName": "127.0.0.1:21503", "appium:platformVersion": "7.1.2", "appium:appPackage": "com.tal.kaoyan", "appium:appActivity": "ui.activity.SplashActivity", "appium:noReset": false, "appium:unicodeKeyboard": true, "appium:resetKeyboard": true, "appium:automationName": "uiautomator2"}}}
DEBUG	2023-01-09 10:01:40,701	[connectionpool.py:232]	Starting new HTTP connection (1): 127.0.0.1:4723
DEBUG	2023-01-09 10:01:49,827	[connectionpool.py:465]	http://127.0.0.1:4723 "POST /wd/hub/session HTTP/1.1" 200 1091
DEBUG	2023-01-09 10:01:49,827	[remote_connection.py:330]	Remote response: status=200 | data={"value":{"capabilities":{"platform":"LINUX","webStorageEnabled":false,"takesScreenshot":true,"javascriptEnabled":true,"databaseEnabled":false,"networkConnectionEnabled":true,"locationContextEnabled":false,"warnings":{},"desired":{"platformName":"Android","deviceName":"127.0.0.1:21503","platformVersion":"7.1.2","appPackage":"com.tal.kaoyan","appActivity":"ui.activity.SplashActivity","noReset":false,"unicodeKeyboard":true,"resetKeyboard":true,"automationName":"uiautomator2","udid":"127.0.0.1:21503"},"platformName":"Android","deviceName":"127.0.0.1:21503","platformVersion":"7.1.2","appPackage":"com.tal.kaoyan","appActivity":"ui.activity.SplashActivity","noReset":false,"unicodeKeyboard":true,"resetKeyboard":true,"automationName":"uiautomator2","udid":"127.0.0.1:21503","deviceUDID":"127.0.0.1:21503","deviceApiLevel":25,"deviceScreenSize":"720x1280","deviceScreenDensity":240,"deviceModel":"OPPO R11 Plus","deviceManufacturer":"OPPO","pixelRatio":1.5,"statBarHeight":36,"viewportRect":{"left":0,"top":36,"width":720,"height":1244}},"sessionId":"57097807-a623-41de-93c7-728a8cbca1a9"}} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '1091', 'ETag': 'W/"443-ILJBKTEWK0NMvVsWFTJoerZ0EC4"', 'Date': 'Mon, 09 Jan 2023 02:01:49 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})
DEBUG	2023-01-09 10:01:49,827	[remote_connection.py:358]	Finished Request
INFO	2023-01-09 10:01:49,827	[Server.py:101]	<appium.webdriver.webdriver.WebDriver (session="57097807-a623-41de-93c7-728a8cbca1a9")>
DEBUG	2023-01-09 10:01:49,827	[remote_connection.py:308]	POST http://127.0.0.1:4740/wd/hub/session {"capabilities": {"firstMatch": [{}], "alwaysMatch": {"platformName": "Android", "appium:deviceName": "127.0.0.1:21513", "appium:platformVersion": "7.1.2", "appium:appPackage": "com.tal.kaoyan", "appium:appActivity": "ui.activity.SplashActivity", "appium:noReset": false, "appium:unicodeKeyboard": true, "appium:resetKeyboard": true, "appium:automationName": "uiautomator2"}}}
DEBUG	2023-01-09 10:01:49,827	[connectionpool.py:232]	Starting new HTTP connection (1): 127.0.0.1:4740
DEBUG	2023-01-09 10:01:58,863	[connectionpool.py:465]	http://127.0.0.1:4740 "POST /wd/hub/session HTTP/1.1" 200 1091
DEBUG	2023-01-09 10:01:58,864	[remote_connection.py:330]	Remote response: status=200 | data={"value":{"capabilities":{"platform":"LINUX","webStorageEnabled":false,"takesScreenshot":true,"javascriptEnabled":true,"databaseEnabled":false,"networkConnectionEnabled":true,"locationContextEnabled":false,"warnings":{},"desired":{"platformName":"Android","deviceName":"127.0.0.1:21513","platformVersion":"7.1.2","appPackage":"com.tal.kaoyan","appActivity":"ui.activity.SplashActivity","noReset":false,"unicodeKeyboard":true,"resetKeyboard":true,"automationName":"uiautomator2","udid":"127.0.0.1:21513"},"platformName":"Android","deviceName":"127.0.0.1:21513","platformVersion":"7.1.2","appPackage":"com.tal.kaoyan","appActivity":"ui.activity.SplashActivity","noReset":false,"unicodeKeyboard":true,"resetKeyboard":true,"automationName":"uiautomator2","udid":"127.0.0.1:21513","deviceUDID":"127.0.0.1:21513","deviceApiLevel":25,"deviceScreenSize":"1080x1920","deviceScreenDensity":360,"deviceModel":"VOG-AL00","deviceManufacturer":"HUAWEI","pixelRatio":2.25,"statBarHeight":54,"viewportRect":{"left":0,"top":54,"width":1080,"height":1866}},"sessionId":"add66f20-b75a-4460-b683-f28bb32fdf34"}} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '1091', 'ETag': 'W/"443-SOD0fKtHgUXS6R4+OUHdM/XYLIk"', 'Date': 'Mon, 09 Jan 2023 02:01:58 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})
DEBUG	2023-01-09 10:01:58,864	[remote_connection.py:358]	Finished Request
INFO	2023-01-09 10:01:58,864	[Server.py:101]	<appium.webdriver.webdriver.WebDriver (session="add66f20-b75a-4460-b683-f28bb32fdf34")>
INFO	2023-01-09 10:16:14,337	[Server.py:42]	['appium -p 4723  -U 127.0.0.1:21503', 'appium -p 4740  -U 127.0.0.1:21513']
DEBUG	2023-01-09 10:16:16,609	[remote_connection.py:308]	POST http://127.0.0.1:4723/wd/hub/session {"capabilities": {"firstMatch": [{}], "alwaysMatch": {"platformName": "Android", "appium:deviceName": "127.0.0.1:21503", "appium:platformVersion": "7.1.2", "appium:appPackage": "com.tal.kaoyan", "appium:appActivity": "ui.activity.SplashActivity", "appium:noReset": false, "appium:unicodeKeyboard": true, "appium:resetKeyboard": true, "appium:automationName": "uiautomator2"}}}
DEBUG	2023-01-09 10:16:16,609	[connectionpool.py:232]	Starting new HTTP connection (1): 127.0.0.1:4723
INFO	2023-01-09 10:16:54,149	[Server.py:42]	['appium -p 4723  -U 127.0.0.1:21503', 'appium -p 4740  -U 127.0.0.1:21513']
INFO	2023-01-09 10:16:59,243	[Server.py:42]	['appium -p 4723  -U 127.0.0.1:21503', 'appium -p 4740  -U 127.0.0.1:21513']
DEBUG	2023-01-09 10:17:02,186	[remote_connection.py:308]	POST http://127.0.0.1:4723/wd/hub/session {"capabilities": {"firstMatch": [{}], "alwaysMatch": {"platformName": "Android", "appium:deviceName": "127.0.0.1:21503", "appium:platformVersion": "7.1.2", "appium:appPackage": "com.tal.kaoyan", "appium:appActivity": "ui.activity.SplashActivity", "appium:noReset": false, "appium:unicodeKeyboard": true, "appium:resetKeyboard": true, "appium:automationName": "uiautomator2"}}}
DEBUG	2023-01-09 10:17:02,186	[connectionpool.py:232]	Starting new HTTP connection (1): 127.0.0.1:4723
DEBUG	2023-01-09 10:17:08,489	[connectionpool.py:465]	http://127.0.0.1:4723 "POST /wd/hub/session HTTP/1.1" 404 3691
DEBUG	2023-01-09 10:17:08,490	[remote_connection.py:330]	Remote response: status=404 | data={"value":{"error":"invalid session id","message":"The session identified by 31cbc0a9-0aaa-4233-980c-4bb5cdb80c5a is not known","stacktrace":"io.appium.uiautomator2.common.exceptions.NoSuchDriverException: The session identified by 31cbc0a9-0aaa-4233-980c-4bb5cdb80c5a is not known\n\tat io.appium.uiautomator2.handler.request.SafeRequestHandler.handle(SafeRequestHandler.java:54)\n\tat io.appium.uiautomator2.server.AppiumServlet.handleRequest(AppiumServlet.java:266)\n\tat io.appium.uiautomator2.server.AppiumServlet.handleHttpRequest(AppiumServlet.java:260)\n\tat io.appium.uiautomator2.http.ServerHandler.channelRead(ServerHandler.java:68)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:435)\n\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:293)\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:267)\n\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:250)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:266)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1294)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:611)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:552)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:466)\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:438)\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:140)\n\tat io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)\n\tat java.lang.Thread.run(Thread.java:761)\n"}} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '3691', 'ETag': 'W/"e6b-+mMJPG/4EamfWyGuq0AV0hLDU1I"', 'Date': 'Mon, 09 Jan 2023 02:17:08 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})
DEBUG	2023-01-09 10:17:08,491	[remote_connection.py:358]	Finished Request
INFO	2023-01-09 10:17:10,838	[Server.py:42]	['appium -p 4723  -U 127.0.0.1:21503', 'appium -p 4740  -U 127.0.0.1:21513']
DEBUG	2023-01-09 10:17:13,791	[remote_connection.py:308]	POST http://127.0.0.1:4723/wd/hub/session {"capabilities": {"firstMatch": [{}], "alwaysMatch": {"platformName": "Android", "appium:deviceName": "127.0.0.1:21503", "appium:platformVersion": "7.1.2", "appium:appPackage": "com.tal.kaoyan", "appium:appActivity": "ui.activity.SplashActivity", "appium:noReset": false, "appium:unicodeKeyboard": true, "appium:resetKeyboard": true, "appium:automationName": "uiautomator2"}}}
DEBUG	2023-01-09 10:17:13,792	[connectionpool.py:232]	Starting new HTTP connection (1): 127.0.0.1:4723
DEBUG	2023-01-09 10:17:18,911	[connectionpool.py:465]	http://127.0.0.1:4723 "POST /wd/hub/session HTTP/1.1" 404 3691
DEBUG	2023-01-09 10:17:18,912	[remote_connection.py:330]	Remote response: status=404 | data={"value":{"error":"invalid session id","message":"The session identified by 7fe21226-ad4c-467c-9f76-6dc946f4b043 is not known","stacktrace":"io.appium.uiautomator2.common.exceptions.NoSuchDriverException: The session identified by 7fe21226-ad4c-467c-9f76-6dc946f4b043 is not known\n\tat io.appium.uiautomator2.handler.request.SafeRequestHandler.handle(SafeRequestHandler.java:54)\n\tat io.appium.uiautomator2.server.AppiumServlet.handleRequest(AppiumServlet.java:266)\n\tat io.appium.uiautomator2.server.AppiumServlet.handleHttpRequest(AppiumServlet.java:260)\n\tat io.appium.uiautomator2.http.ServerHandler.channelRead(ServerHandler.java:68)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:435)\n\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:293)\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:267)\n\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:250)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:266)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1294)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:611)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:552)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:466)\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:438)\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:140)\n\tat io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)\n\tat java.lang.Thread.run(Thread.java:761)\n"}} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '3691', 'ETag': 'W/"e6b-4WfbyjvMp3XM093kMHiqVhU8qGo"', 'Date': 'Mon, 09 Jan 2023 02:17:18 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})
DEBUG	2023-01-09 10:17:18,912	[remote_connection.py:358]	Finished Request
INFO	2023-01-09 10:17:22,181	[Server.py:42]	['appium -p 4723  -U 127.0.0.1:21503', 'appium -p 4740  -U 127.0.0.1:21513']
DEBUG	2023-01-09 10:17:25,111	[remote_connection.py:308]	POST http://127.0.0.1:4723/wd/hub/session {"capabilities": {"firstMatch": [{}], "alwaysMatch": {"platformName": "Android", "appium:deviceName": "127.0.0.1:21503", "appium:platformVersion": "7.1.2", "appium:appPackage": "com.tal.kaoyan", "appium:appActivity": "ui.activity.SplashActivity", "appium:noReset": false, "appium:unicodeKeyboard": true, "appium:resetKeyboard": true, "appium:automationName": "uiautomator2"}}}
DEBUG	2023-01-09 10:17:25,112	[connectionpool.py:232]	Starting new HTTP connection (1): 127.0.0.1:4723
DEBUG	2023-01-09 10:17:31,368	[connectionpool.py:465]	http://127.0.0.1:4723 "POST /wd/hub/session HTTP/1.1" 404 3691
DEBUG	2023-01-09 10:17:31,368	[remote_connection.py:330]	Remote response: status=404 | data={"value":{"error":"invalid session id","message":"The session identified by 2158ad21-46b2-4140-82d4-9fc3ec786d8b is not known","stacktrace":"io.appium.uiautomator2.common.exceptions.NoSuchDriverException: The session identified by 2158ad21-46b2-4140-82d4-9fc3ec786d8b is not known\n\tat io.appium.uiautomator2.handler.request.SafeRequestHandler.handle(SafeRequestHandler.java:54)\n\tat io.appium.uiautomator2.server.AppiumServlet.handleRequest(AppiumServlet.java:266)\n\tat io.appium.uiautomator2.server.AppiumServlet.handleHttpRequest(AppiumServlet.java:260)\n\tat io.appium.uiautomator2.http.ServerHandler.channelRead(ServerHandler.java:68)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:435)\n\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:293)\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:267)\n\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:250)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:266)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1294)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:611)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:552)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:466)\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:438)\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:140)\n\tat io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)\n\tat java.lang.Thread.run(Thread.java:761)\n"}} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '3691', 'ETag': 'W/"e6b-HLxwPwGcglyOxkGhp7SxnwmjMAw"', 'Date': 'Mon, 09 Jan 2023 02:17:31 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})
DEBUG	2023-01-09 10:17:31,369	[remote_connection.py:358]	Finished Request
INFO	2023-01-09 10:17:33,665	[Server.py:42]	['appium -p 4723  -U 127.0.0.1:21503', 'appium -p 4740  -U 127.0.0.1:21513']
DEBUG	2023-01-09 10:17:36,617	[remote_connection.py:308]	POST http://127.0.0.1:4723/wd/hub/session {"capabilities": {"firstMatch": [{}], "alwaysMatch": {"platformName": "Android", "appium:deviceName": "127.0.0.1:21503", "appium:platformVersion": "7.1.2", "appium:appPackage": "com.tal.kaoyan", "appium:appActivity": "ui.activity.SplashActivity", "appium:noReset": false, "appium:unicodeKeyboard": true, "appium:resetKeyboard": true, "appium:automationName": "uiautomator2"}}}
DEBUG	2023-01-09 10:17:36,617	[connectionpool.py:232]	Starting new HTTP connection (1): 127.0.0.1:4723
DEBUG	2023-01-09 10:17:41,559	[connectionpool.py:465]	http://127.0.0.1:4723 "POST /wd/hub/session HTTP/1.1" 404 3691
DEBUG	2023-01-09 10:17:41,559	[remote_connection.py:330]	Remote response: status=404 | data={"value":{"error":"invalid session id","message":"The session identified by e41438d4-8918-4217-bea0-4db94dfe03c8 is not known","stacktrace":"io.appium.uiautomator2.common.exceptions.NoSuchDriverException: The session identified by e41438d4-8918-4217-bea0-4db94dfe03c8 is not known\n\tat io.appium.uiautomator2.handler.request.SafeRequestHandler.handle(SafeRequestHandler.java:54)\n\tat io.appium.uiautomator2.server.AppiumServlet.handleRequest(AppiumServlet.java:266)\n\tat io.appium.uiautomator2.server.AppiumServlet.handleHttpRequest(AppiumServlet.java:260)\n\tat io.appium.uiautomator2.http.ServerHandler.channelRead(ServerHandler.java:68)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:435)\n\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:293)\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:267)\n\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:250)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:266)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1294)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:611)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:552)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:466)\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:438)\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:140)\n\tat io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)\n\tat java.lang.Thread.run(Thread.java:761)\n"}} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '3691', 'ETag': 'W/"e6b-pNEY6VdFW9gD5t5ronaek4W/AOE"', 'Date': 'Mon, 09 Jan 2023 02:17:41 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})
DEBUG	2023-01-09 10:17:41,560	[remote_connection.py:358]	Finished Request
INFO	2023-01-09 10:17:43,916	[Server.py:42]	['appium -p 4723  -U 127.0.0.1:21503', 'appium -p 4740  -U 127.0.0.1:21513']
DEBUG	2023-01-09 10:17:46,881	[remote_connection.py:308]	POST http://127.0.0.1:4723/wd/hub/session {"capabilities": {"firstMatch": [{}], "alwaysMatch": {"platformName": "Android", "appium:deviceName": "127.0.0.1:21503", "appium:platformVersion": "7.1.2", "appium:appPackage": "com.tal.kaoyan", "appium:appActivity": "ui.activity.SplashActivity", "appium:noReset": false, "appium:unicodeKeyboard": true, "appium:resetKeyboard": true, "appium:automationName": "uiautomator2"}}}
DEBUG	2023-01-09 10:17:46,882	[connectionpool.py:232]	Starting new HTTP connection (1): 127.0.0.1:4723
DEBUG	2023-01-09 10:17:51,767	[connectionpool.py:465]	http://127.0.0.1:4723 "POST /wd/hub/session HTTP/1.1" 404 3691
DEBUG	2023-01-09 10:17:51,768	[remote_connection.py:330]	Remote response: status=404 | data={"value":{"error":"invalid session id","message":"The session identified by e7a11335-f450-4778-ae72-29393078def9 is not known","stacktrace":"io.appium.uiautomator2.common.exceptions.NoSuchDriverException: The session identified by e7a11335-f450-4778-ae72-29393078def9 is not known\n\tat io.appium.uiautomator2.handler.request.SafeRequestHandler.handle(SafeRequestHandler.java:54)\n\tat io.appium.uiautomator2.server.AppiumServlet.handleRequest(AppiumServlet.java:266)\n\tat io.appium.uiautomator2.server.AppiumServlet.handleHttpRequest(AppiumServlet.java:260)\n\tat io.appium.uiautomator2.http.ServerHandler.channelRead(ServerHandler.java:68)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:435)\n\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:293)\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:267)\n\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:250)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:266)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1294)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:611)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:552)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:466)\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:438)\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:140)\n\tat io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)\n\tat java.lang.Thread.run(Thread.java:761)\n"}} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '3691', 'ETag': 'W/"e6b-bdRyQigtNgjK8qm8sqwZCCWUpSk"', 'Date': 'Mon, 09 Jan 2023 02:17:51 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})
DEBUG	2023-01-09 10:17:51,769	[remote_connection.py:358]	Finished Request
INFO	2023-01-09 10:17:54,111	[Server.py:42]	['appium -p 4723  -U 127.0.0.1:21503', 'appium -p 4740  -U 127.0.0.1:21513']
DEBUG	2023-01-09 10:17:57,106	[remote_connection.py:308]	POST http://127.0.0.1:4723/wd/hub/session {"capabilities": {"firstMatch": [{}], "alwaysMatch": {"platformName": "Android", "appium:deviceName": "127.0.0.1:21503", "appium:platformVersion": "7.1.2", "appium:appPackage": "com.tal.kaoyan", "appium:appActivity": "ui.activity.SplashActivity", "appium:noReset": false, "appium:unicodeKeyboard": true, "appium:resetKeyboard": true, "appium:automationName": "uiautomator2"}}}
DEBUG	2023-01-09 10:17:57,107	[connectionpool.py:232]	Starting new HTTP connection (1): 127.0.0.1:4723
DEBUG	2023-01-09 10:18:02,263	[connectionpool.py:465]	http://127.0.0.1:4723 "POST /wd/hub/session HTTP/1.1" 404 3691
DEBUG	2023-01-09 10:18:02,264	[remote_connection.py:330]	Remote response: status=404 | data={"value":{"error":"invalid session id","message":"The session identified by 194a2bef-041b-4c2e-8996-d9e19d879881 is not known","stacktrace":"io.appium.uiautomator2.common.exceptions.NoSuchDriverException: The session identified by 194a2bef-041b-4c2e-8996-d9e19d879881 is not known\n\tat io.appium.uiautomator2.handler.request.SafeRequestHandler.handle(SafeRequestHandler.java:54)\n\tat io.appium.uiautomator2.server.AppiumServlet.handleRequest(AppiumServlet.java:266)\n\tat io.appium.uiautomator2.server.AppiumServlet.handleHttpRequest(AppiumServlet.java:260)\n\tat io.appium.uiautomator2.http.ServerHandler.channelRead(ServerHandler.java:68)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:435)\n\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:293)\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:267)\n\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:250)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:266)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1294)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:611)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:552)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:466)\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:438)\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:140)\n\tat io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)\n\tat java.lang.Thread.run(Thread.java:761)\n"}} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '3691', 'ETag': 'W/"e6b-Wv3TXH3WuW9M9xgJMRh2aCI5jwQ"', 'Date': 'Mon, 09 Jan 2023 02:18:02 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})
DEBUG	2023-01-09 10:18:02,264	[remote_connection.py:358]	Finished Request
INFO	2023-01-09 10:18:04,599	[Server.py:42]	['appium -p 4723  -U 127.0.0.1:21503', 'appium -p 4740  -U 127.0.0.1:21513']
DEBUG	2023-01-09 10:18:07,545	[remote_connection.py:308]	POST http://127.0.0.1:4723/wd/hub/session {"capabilities": {"firstMatch": [{}], "alwaysMatch": {"platformName": "Android", "appium:deviceName": "127.0.0.1:21503", "appium:platformVersion": "7.1.2", "appium:appPackage": "com.tal.kaoyan", "appium:appActivity": "ui.activity.SplashActivity", "appium:noReset": false, "appium:unicodeKeyboard": true, "appium:resetKeyboard": true, "appium:automationName": "uiautomator2"}}}
DEBUG	2023-01-09 10:18:07,546	[connectionpool.py:232]	Starting new HTTP connection (1): 127.0.0.1:4723
DEBUG	2023-01-09 10:18:12,408	[connectionpool.py:465]	http://127.0.0.1:4723 "POST /wd/hub/session HTTP/1.1" 404 3691
DEBUG	2023-01-09 10:18:12,408	[remote_connection.py:330]	Remote response: status=404 | data={"value":{"error":"invalid session id","message":"The session identified by 88414278-a539-4abc-82c9-2639d9961054 is not known","stacktrace":"io.appium.uiautomator2.common.exceptions.NoSuchDriverException: The session identified by 88414278-a539-4abc-82c9-2639d9961054 is not known\n\tat io.appium.uiautomator2.handler.request.SafeRequestHandler.handle(SafeRequestHandler.java:54)\n\tat io.appium.uiautomator2.server.AppiumServlet.handleRequest(AppiumServlet.java:266)\n\tat io.appium.uiautomator2.server.AppiumServlet.handleHttpRequest(AppiumServlet.java:260)\n\tat io.appium.uiautomator2.http.ServerHandler.channelRead(ServerHandler.java:68)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:435)\n\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:293)\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:267)\n\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:250)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:266)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1294)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:611)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:552)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:466)\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:438)\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:140)\n\tat io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)\n\tat java.lang.Thread.run(Thread.java:761)\n"}} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '3691', 'ETag': 'W/"e6b-PeAhId9sLN7ID91zxhtRk3N1SLc"', 'Date': 'Mon, 09 Jan 2023 02:18:12 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})
DEBUG	2023-01-09 10:18:12,409	[remote_connection.py:358]	Finished Request
INFO	2023-01-09 10:18:14,767	[Server.py:42]	['appium -p 4723  -U 127.0.0.1:21503', 'appium -p 4740  -U 127.0.0.1:21513']
DEBUG	2023-01-09 10:18:17,694	[remote_connection.py:308]	POST http://127.0.0.1:4723/wd/hub/session {"capabilities": {"firstMatch": [{}], "alwaysMatch": {"platformName": "Android", "appium:deviceName": "127.0.0.1:21503", "appium:platformVersion": "7.1.2", "appium:appPackage": "com.tal.kaoyan", "appium:appActivity": "ui.activity.SplashActivity", "appium:noReset": false, "appium:unicodeKeyboard": true, "appium:resetKeyboard": true, "appium:automationName": "uiautomator2"}}}
DEBUG	2023-01-09 10:18:17,695	[connectionpool.py:232]	Starting new HTTP connection (1): 127.0.0.1:4723
DEBUG	2023-01-09 10:18:22,533	[connectionpool.py:465]	http://127.0.0.1:4723 "POST /wd/hub/session HTTP/1.1" 404 3691
DEBUG	2023-01-09 10:18:22,534	[remote_connection.py:330]	Remote response: status=404 | data={"value":{"error":"invalid session id","message":"The session identified by 578bd918-a3bd-475a-b1cd-9c585040db06 is not known","stacktrace":"io.appium.uiautomator2.common.exceptions.NoSuchDriverException: The session identified by 578bd918-a3bd-475a-b1cd-9c585040db06 is not known\n\tat io.appium.uiautomator2.handler.request.SafeRequestHandler.handle(SafeRequestHandler.java:54)\n\tat io.appium.uiautomator2.server.AppiumServlet.handleRequest(AppiumServlet.java:266)\n\tat io.appium.uiautomator2.server.AppiumServlet.handleHttpRequest(AppiumServlet.java:260)\n\tat io.appium.uiautomator2.http.ServerHandler.channelRead(ServerHandler.java:68)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:435)\n\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:293)\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:267)\n\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:250)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:266)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1294)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:611)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:552)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:466)\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:438)\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:140)\n\tat io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)\n\tat java.lang.Thread.run(Thread.java:761)\n"}} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '3691', 'ETag': 'W/"e6b-zlVuKYryRWhsONzIUMsU25rzxpM"', 'Date': 'Mon, 09 Jan 2023 02:18:22 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})
DEBUG	2023-01-09 10:18:22,535	[remote_connection.py:358]	Finished Request
INFO	2023-01-09 10:18:24,870	[Server.py:42]	['appium -p 4723  -U 127.0.0.1:21503', 'appium -p 4740  -U 127.0.0.1:21513']
DEBUG	2023-01-09 10:18:27,805	[remote_connection.py:308]	POST http://127.0.0.1:4723/wd/hub/session {"capabilities": {"firstMatch": [{}], "alwaysMatch": {"platformName": "Android", "appium:deviceName": "127.0.0.1:21503", "appium:platformVersion": "7.1.2", "appium:appPackage": "com.tal.kaoyan", "appium:appActivity": "ui.activity.SplashActivity", "appium:noReset": false, "appium:unicodeKeyboard": true, "appium:resetKeyboard": true, "appium:automationName": "uiautomator2"}}}
DEBUG	2023-01-09 10:18:27,805	[connectionpool.py:232]	Starting new HTTP connection (1): 127.0.0.1:4723
DEBUG	2023-01-09 10:18:32,699	[connectionpool.py:465]	http://127.0.0.1:4723 "POST /wd/hub/session HTTP/1.1" 404 3691
DEBUG	2023-01-09 10:18:32,700	[remote_connection.py:330]	Remote response: status=404 | data={"value":{"error":"invalid session id","message":"The session identified by 7438bc5b-0a88-4313-b35f-f3bc2f492471 is not known","stacktrace":"io.appium.uiautomator2.common.exceptions.NoSuchDriverException: The session identified by 7438bc5b-0a88-4313-b35f-f3bc2f492471 is not known\n\tat io.appium.uiautomator2.handler.request.SafeRequestHandler.handle(SafeRequestHandler.java:54)\n\tat io.appium.uiautomator2.server.AppiumServlet.handleRequest(AppiumServlet.java:266)\n\tat io.appium.uiautomator2.server.AppiumServlet.handleHttpRequest(AppiumServlet.java:260)\n\tat io.appium.uiautomator2.http.ServerHandler.channelRead(ServerHandler.java:68)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:435)\n\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:293)\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:267)\n\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:250)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:266)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1294)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:611)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:552)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:466)\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:438)\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:140)\n\tat io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)\n\tat java.lang.Thread.run(Thread.java:761)\n"}} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '3691', 'ETag': 'W/"e6b-Tt4C9po2m3bMQJwQGyE6me0kyjs"', 'Date': 'Mon, 09 Jan 2023 02:18:32 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})
DEBUG	2023-01-09 10:18:32,700	[remote_connection.py:358]	Finished Request
INFO	2023-01-09 10:34:09,621	[Server.py:42]	['appium -p 4723  -U 127.0.0.1:21503', 'appium -p 4740  -U 127.0.0.1:21513']
DEBUG	2023-01-09 10:34:11,904	[remote_connection.py:308]	POST http://127.0.0.1:4723/wd/hub/session {"capabilities": {"firstMatch": [{}], "alwaysMatch": {"platformName": "Android", "appium:deviceName": "127.0.0.1:21503", "appium:platformVersion": "7.1.2", "appium:appPackage": "com.tal.kaoyan", "appium:appActivity": "ui.activity.SplashActivity", "appium:noReset": false, "appium:unicodeKeyboard": true, "appium:resetKeyboard": true, "appium:automationName": "uiautomator2"}}}
DEBUG	2023-01-09 10:34:11,905	[connectionpool.py:232]	Starting new HTTP connection (1): 127.0.0.1:4723
DEBUG	2023-01-09 10:34:18,834	[connectionpool.py:465]	http://127.0.0.1:4723 "POST /wd/hub/session HTTP/1.1" 404 3691
DEBUG	2023-01-09 10:34:18,834	[remote_connection.py:330]	Remote response: status=404 | data={"value":{"error":"invalid session id","message":"The session identified by 9539645a-ae1a-4059-8ace-749749f85bb0 is not known","stacktrace":"io.appium.uiautomator2.common.exceptions.NoSuchDriverException: The session identified by 9539645a-ae1a-4059-8ace-749749f85bb0 is not known\n\tat io.appium.uiautomator2.handler.request.SafeRequestHandler.handle(SafeRequestHandler.java:54)\n\tat io.appium.uiautomator2.server.AppiumServlet.handleRequest(AppiumServlet.java:266)\n\tat io.appium.uiautomator2.server.AppiumServlet.handleHttpRequest(AppiumServlet.java:260)\n\tat io.appium.uiautomator2.http.ServerHandler.channelRead(ServerHandler.java:68)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:435)\n\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:293)\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:267)\n\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:250)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:266)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1294)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:611)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:552)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:466)\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:438)\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:140)\n\tat io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)\n\tat java.lang.Thread.run(Thread.java:761)\n"}} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '3691', 'ETag': 'W/"e6b-y+Ept4KmJpPuq6jEJLu0wloV2qY"', 'Date': 'Mon, 09 Jan 2023 02:34:18 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})
DEBUG	2023-01-09 10:34:18,837	[remote_connection.py:358]	Finished Request
INFO	2023-01-09 10:34:21,039	[Server.py:42]	['appium -p 4723  -U 127.0.0.1:21503', 'appium -p 4740  -U 127.0.0.1:21513']
DEBUG	2023-01-09 10:34:23,271	[remote_connection.py:308]	POST http://127.0.0.1:4723/wd/hub/session {"capabilities": {"firstMatch": [{}], "alwaysMatch": {"platformName": "Android", "appium:deviceName": "127.0.0.1:21503", "appium:platformVersion": "7.1.2", "appium:appPackage": "com.tal.kaoyan", "appium:appActivity": "ui.activity.SplashActivity", "appium:noReset": false, "appium:unicodeKeyboard": true, "appium:resetKeyboard": true, "appium:automationName": "uiautomator2"}}}
DEBUG	2023-01-09 10:34:23,272	[connectionpool.py:232]	Starting new HTTP connection (1): 127.0.0.1:4723
DEBUG	2023-01-09 10:34:28,676	[connectionpool.py:465]	http://127.0.0.1:4723 "POST /wd/hub/session HTTP/1.1" 404 3691
DEBUG	2023-01-09 10:34:28,676	[remote_connection.py:330]	Remote response: status=404 | data={"value":{"error":"invalid session id","message":"The session identified by 3b0bb836-7ba8-4ea4-9a9a-af6766326017 is not known","stacktrace":"io.appium.uiautomator2.common.exceptions.NoSuchDriverException: The session identified by 3b0bb836-7ba8-4ea4-9a9a-af6766326017 is not known\n\tat io.appium.uiautomator2.handler.request.SafeRequestHandler.handle(SafeRequestHandler.java:54)\n\tat io.appium.uiautomator2.server.AppiumServlet.handleRequest(AppiumServlet.java:266)\n\tat io.appium.uiautomator2.server.AppiumServlet.handleHttpRequest(AppiumServlet.java:260)\n\tat io.appium.uiautomator2.http.ServerHandler.channelRead(ServerHandler.java:68)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:435)\n\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:293)\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:267)\n\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:250)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:266)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1294)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:611)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:552)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:466)\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:438)\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:140)\n\tat io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)\n\tat java.lang.Thread.run(Thread.java:761)\n"}} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '3691', 'ETag': 'W/"e6b-oBFcbhaXXa2bypv+oi0PPq3xJFg"', 'Date': 'Mon, 09 Jan 2023 02:34:28 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})
DEBUG	2023-01-09 10:34:28,680	[remote_connection.py:358]	Finished Request
INFO	2023-01-09 10:34:30,815	[Server.py:42]	['appium -p 4723  -U 127.0.0.1:21503', 'appium -p 4740  -U 127.0.0.1:21513']
INFO	2023-01-09 10:49:58,341	[Server.py:42]	['appium -p 4723  -U 127.0.0.1:21503', 'appium -p 4740  -U 127.0.0.1:21513']
DEBUG	2023-01-09 10:50:00,571	[remote_connection.py:308]	POST http://127.0.0.1:4723/wd/hub/session {"capabilities": {"firstMatch": [{}], "alwaysMatch": {"platformName": "Android", "appium:deviceName": "127.0.0.1:21503", "appium:platformVersion": "7.1.2", "appium:appPackage": "com.tal.kaoyan", "appium:appActivity": "ui.activity.SplashActivity", "appium:noReset": false, "appium:unicodeKeyboard": true, "appium:resetKeyboard": true, "appium:automationName": "uiautomator2"}}}
DEBUG	2023-01-09 10:50:00,572	[connectionpool.py:232]	Starting new HTTP connection (1): 127.0.0.1:4723
DEBUG	2023-01-09 10:50:07,031	[connectionpool.py:465]	http://127.0.0.1:4723 "POST /wd/hub/session HTTP/1.1" 404 3691
DEBUG	2023-01-09 10:50:07,032	[remote_connection.py:330]	Remote response: status=404 | data={"value":{"error":"invalid session id","message":"The session identified by 6ac6b325-11d6-4e77-bc77-717865423c22 is not known","stacktrace":"io.appium.uiautomator2.common.exceptions.NoSuchDriverException: The session identified by 6ac6b325-11d6-4e77-bc77-717865423c22 is not known\n\tat io.appium.uiautomator2.handler.request.SafeRequestHandler.handle(SafeRequestHandler.java:54)\n\tat io.appium.uiautomator2.server.AppiumServlet.handleRequest(AppiumServlet.java:266)\n\tat io.appium.uiautomator2.server.AppiumServlet.handleHttpRequest(AppiumServlet.java:260)\n\tat io.appium.uiautomator2.http.ServerHandler.channelRead(ServerHandler.java:68)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:435)\n\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:293)\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:267)\n\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:250)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:266)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1294)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:611)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:552)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:466)\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:438)\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:140)\n\tat io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)\n\tat java.lang.Thread.run(Thread.java:761)\n"}} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '3691', 'ETag': 'W/"e6b-k+ErafRBld+uHUqgnXIPfNW4jRQ"', 'Date': 'Mon, 09 Jan 2023 02:50:07 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})
DEBUG	2023-01-09 10:50:07,036	[remote_connection.py:358]	Finished Request
INFO	2023-01-09 10:51:57,205	[Server.py:42]	['appium -p 4723  -U 127.0.0.1:21503', 'appium -p 4740  -U 127.0.0.1:21513']
DEBUG	2023-01-09 10:51:59,430	[remote_connection.py:308]	POST http://127.0.0.1:4723/wd/hub/session {"capabilities": {"firstMatch": [{}], "alwaysMatch": {"platformName": "Android", "appium:deviceName": "127.0.0.1:21503", "appium:platformVersion": "7.1.2", "appium:appPackage": "com.tal.kaoyan", "appium:appActivity": "ui.activity.SplashActivity", "appium:noReset": false, "appium:unicodeKeyboard": true, "appium:resetKeyboard": true, "appium:automationName": "uiautomator2"}}}
DEBUG	2023-01-09 10:51:59,431	[connectionpool.py:232]	Starting new HTTP connection (1): 127.0.0.1:4723
DEBUG	2023-01-09 10:52:05,796	[connectionpool.py:465]	http://127.0.0.1:4723 "POST /wd/hub/session HTTP/1.1" 404 3691
DEBUG	2023-01-09 10:52:05,796	[remote_connection.py:330]	Remote response: status=404 | data={"value":{"error":"invalid session id","message":"The session identified by 192b0516-8d7b-4851-966f-2a669b19fd73 is not known","stacktrace":"io.appium.uiautomator2.common.exceptions.NoSuchDriverException: The session identified by 192b0516-8d7b-4851-966f-2a669b19fd73 is not known\n\tat io.appium.uiautomator2.handler.request.SafeRequestHandler.handle(SafeRequestHandler.java:54)\n\tat io.appium.uiautomator2.server.AppiumServlet.handleRequest(AppiumServlet.java:266)\n\tat io.appium.uiautomator2.server.AppiumServlet.handleHttpRequest(AppiumServlet.java:260)\n\tat io.appium.uiautomator2.http.ServerHandler.channelRead(ServerHandler.java:68)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:435)\n\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:293)\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:267)\n\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:250)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:266)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1294)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:611)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:552)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:466)\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:438)\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:140)\n\tat io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)\n\tat java.lang.Thread.run(Thread.java:761)\n"}} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '3691', 'ETag': 'W/"e6b-RPJ6oRPKCsPJaFbYdMiXjyb0VQ8"', 'Date': 'Mon, 09 Jan 2023 02:52:05 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})
DEBUG	2023-01-09 10:52:05,797	[remote_connection.py:358]	Finished Request
INFO	2023-01-09 10:52:24,245	[Server.py:42]	['appium -p 4723  -U 127.0.0.1:21503', 'appium -p 4740  -U 127.0.0.1:21513']
DEBUG	2023-01-09 10:52:26,472	[remote_connection.py:308]	POST http://127.0.0.1:4723/wd/hub/session {"capabilities": {"firstMatch": [{}], "alwaysMatch": {"platformName": "Android", "appium:deviceName": "127.0.0.1:21503", "appium:platformVersion": "7.1.2", "appium:appPackage": "com.tal.kaoyan", "appium:appActivity": "ui.activity.SplashActivity", "appium:noReset": false, "appium:unicodeKeyboard": true, "appium:resetKeyboard": true, "appium:automationName": "uiautomator2"}}}
DEBUG	2023-01-09 10:52:26,473	[connectionpool.py:232]	Starting new HTTP connection (1): 127.0.0.1:4723
DEBUG	2023-01-09 10:52:32,922	[connectionpool.py:465]	http://127.0.0.1:4723 "POST /wd/hub/session HTTP/1.1" 404 3691
DEBUG	2023-01-09 10:52:32,922	[remote_connection.py:330]	Remote response: status=404 | data={"value":{"error":"invalid session id","message":"The session identified by b50234e5-8158-4371-9920-a804d27f3d64 is not known","stacktrace":"io.appium.uiautomator2.common.exceptions.NoSuchDriverException: The session identified by b50234e5-8158-4371-9920-a804d27f3d64 is not known\n\tat io.appium.uiautomator2.handler.request.SafeRequestHandler.handle(SafeRequestHandler.java:54)\n\tat io.appium.uiautomator2.server.AppiumServlet.handleRequest(AppiumServlet.java:266)\n\tat io.appium.uiautomator2.server.AppiumServlet.handleHttpRequest(AppiumServlet.java:260)\n\tat io.appium.uiautomator2.http.ServerHandler.channelRead(ServerHandler.java:68)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:435)\n\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:293)\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:267)\n\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:250)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:266)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1294)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:611)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:552)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:466)\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:438)\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:140)\n\tat io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)\n\tat java.lang.Thread.run(Thread.java:761)\n"}} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '3691', 'ETag': 'W/"e6b-zZEpQljM0ShIRWG1bTzKcWgTe8A"', 'Date': 'Mon, 09 Jan 2023 02:52:32 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})
DEBUG	2023-01-09 10:52:32,925	[remote_connection.py:358]	Finished Request
INFO	2023-01-09 10:57:29,319	[Server.py:42]	['appium -p 4723  -U 127.0.0.1:21503', 'appium -p 4740  -U 127.0.0.1:21513']
DEBUG	2023-01-09 10:57:31,551	[remote_connection.py:308]	POST http://127.0.0.1:4723/wd/hub/session {"capabilities": {"firstMatch": [{}], "alwaysMatch": {"platformName": "Android", "appium:deviceName": "127.0.0.1:21503", "appium:platformVersion": "7.1.2", "appium:appPackage": "com.tal.kaoyan", "appium:appActivity": "ui.activity.SplashActivity", "appium:noReset": false, "appium:unicodeKeyboard": true, "appium:resetKeyboard": true, "appium:automationName": "uiautomator2"}}}
DEBUG	2023-01-09 10:57:31,552	[connectionpool.py:232]	Starting new HTTP connection (1): 127.0.0.1:4723
DEBUG	2023-01-09 10:57:37,819	[connectionpool.py:465]	http://127.0.0.1:4723 "POST /wd/hub/session HTTP/1.1" 404 3691
DEBUG	2023-01-09 10:57:37,819	[remote_connection.py:330]	Remote response: status=404 | data={"value":{"error":"invalid session id","message":"The session identified by a654c1ea-b6c9-4871-b268-37de404eae74 is not known","stacktrace":"io.appium.uiautomator2.common.exceptions.NoSuchDriverException: The session identified by a654c1ea-b6c9-4871-b268-37de404eae74 is not known\n\tat io.appium.uiautomator2.handler.request.SafeRequestHandler.handle(SafeRequestHandler.java:54)\n\tat io.appium.uiautomator2.server.AppiumServlet.handleRequest(AppiumServlet.java:266)\n\tat io.appium.uiautomator2.server.AppiumServlet.handleHttpRequest(AppiumServlet.java:260)\n\tat io.appium.uiautomator2.http.ServerHandler.channelRead(ServerHandler.java:68)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:435)\n\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:293)\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:267)\n\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:250)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:266)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1294)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:611)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:552)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:466)\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:438)\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:140)\n\tat io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)\n\tat java.lang.Thread.run(Thread.java:761)\n"}} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '3691', 'ETag': 'W/"e6b-OzFE5PvutuFTBAkFxevqYdeo2JQ"', 'Date': 'Mon, 09 Jan 2023 02:57:37 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})
DEBUG	2023-01-09 10:57:37,823	[remote_connection.py:358]	Finished Request
INFO	2023-01-09 11:07:31,979	[Server.py:42]	['appium -p 4723  -U 127.0.0.1:21503', 'appium -p 4740  -U 127.0.0.1:21513']
DEBUG	2023-01-09 11:07:34,201	[remote_connection.py:308]	POST http://127.0.0.1:4723/wd/hub/session {"capabilities": {"firstMatch": [{}], "alwaysMatch": {"platformName": "Android", "appium:deviceName": "127.0.0.1:21503", "appium:platformVersion": "7.1.2", "appium:appPackage": "com.tal.kaoyan", "appium:appActivity": "ui.activity.SplashActivity", "appium:noReset": false, "appium:unicodeKeyboard": true, "appium:resetKeyboard": true, "appium:automationName": "uiautomator2"}}}
DEBUG	2023-01-09 11:07:34,201	[connectionpool.py:232]	Starting new HTTP connection (1): 127.0.0.1:4723
DEBUG	2023-01-09 11:07:40,473	[connectionpool.py:465]	http://127.0.0.1:4723 "POST /wd/hub/session HTTP/1.1" 404 3691
DEBUG	2023-01-09 11:07:40,474	[remote_connection.py:330]	Remote response: status=404 | data={"value":{"error":"invalid session id","message":"The session identified by fbf78862-ba0f-41fe-9a4e-cb553380364b is not known","stacktrace":"io.appium.uiautomator2.common.exceptions.NoSuchDriverException: The session identified by fbf78862-ba0f-41fe-9a4e-cb553380364b is not known\n\tat io.appium.uiautomator2.handler.request.SafeRequestHandler.handle(SafeRequestHandler.java:54)\n\tat io.appium.uiautomator2.server.AppiumServlet.handleRequest(AppiumServlet.java:266)\n\tat io.appium.uiautomator2.server.AppiumServlet.handleHttpRequest(AppiumServlet.java:260)\n\tat io.appium.uiautomator2.http.ServerHandler.channelRead(ServerHandler.java:68)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:435)\n\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:293)\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:267)\n\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:250)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:266)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1294)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:611)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:552)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:466)\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:438)\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:140)\n\tat io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)\n\tat java.lang.Thread.run(Thread.java:761)\n"}} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '3691', 'ETag': 'W/"e6b-R4RAWxh9CdZZld29du7WkGVBqjo"', 'Date': 'Mon, 09 Jan 2023 03:07:40 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})
DEBUG	2023-01-09 11:07:40,475	[remote_connection.py:358]	Finished Request
INFO	2023-01-09 11:07:42,619	[Server.py:42]	['appium -p 4723  -U 127.0.0.1:21503', 'appium -p 4740  -U 127.0.0.1:21513']
DEBUG	2023-01-09 11:07:44,842	[remote_connection.py:308]	POST http://127.0.0.1:4723/wd/hub/session {"capabilities": {"firstMatch": [{}], "alwaysMatch": {"platformName": "Android", "appium:deviceName": "127.0.0.1:21503", "appium:platformVersion": "7.1.2", "appium:appPackage": "com.tal.kaoyan", "appium:appActivity": "ui.activity.SplashActivity", "appium:noReset": false, "appium:unicodeKeyboard": true, "appium:resetKeyboard": true, "appium:automationName": "uiautomator2"}}}
DEBUG	2023-01-09 11:07:44,843	[connectionpool.py:232]	Starting new HTTP connection (1): 127.0.0.1:4723
DEBUG	2023-01-09 11:07:50,194	[connectionpool.py:465]	http://127.0.0.1:4723 "POST /wd/hub/session HTTP/1.1" 404 3691
DEBUG	2023-01-09 11:07:50,194	[remote_connection.py:330]	Remote response: status=404 | data={"value":{"error":"invalid session id","message":"The session identified by 96e96cd5-e57d-4d80-a223-fe88231f2e42 is not known","stacktrace":"io.appium.uiautomator2.common.exceptions.NoSuchDriverException: The session identified by 96e96cd5-e57d-4d80-a223-fe88231f2e42 is not known\n\tat io.appium.uiautomator2.handler.request.SafeRequestHandler.handle(SafeRequestHandler.java:54)\n\tat io.appium.uiautomator2.server.AppiumServlet.handleRequest(AppiumServlet.java:266)\n\tat io.appium.uiautomator2.server.AppiumServlet.handleHttpRequest(AppiumServlet.java:260)\n\tat io.appium.uiautomator2.http.ServerHandler.channelRead(ServerHandler.java:68)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:435)\n\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:293)\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:267)\n\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:250)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:266)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1294)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:611)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:552)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:466)\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:438)\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:140)\n\tat io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)\n\tat java.lang.Thread.run(Thread.java:761)\n"}} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '3691', 'ETag': 'W/"e6b-U/2tkMsnHLAwP9cq6z+EBCnS1Eo"', 'Date': 'Mon, 09 Jan 2023 03:07:50 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})
DEBUG	2023-01-09 11:07:50,197	[remote_connection.py:358]	Finished Request
INFO	2023-01-09 11:17:05,193	[Server.py:42]	['appium -p 4723  -U 127.0.0.1:21503', 'appium -p 4740  -U 127.0.0.1:21513']
DEBUG	2023-01-09 11:17:07,451	[remote_connection.py:308]	POST http://127.0.0.1:4723/wd/hub/session {"capabilities": {"firstMatch": [{}], "alwaysMatch": {"platformName": "Android", "appium:deviceName": "127.0.0.1:21503", "appium:platformVersion": "7.1.2", "appium:appPackage": "com.tal.kaoyan", "appium:appActivity": "ui.activity.SplashActivity", "appium:noReset": false, "appium:unicodeKeyboard": true, "appium:resetKeyboard": true, "appium:automationName": "uiautomator2"}}}
DEBUG	2023-01-09 11:17:07,451	[connectionpool.py:232]	Starting new HTTP connection (1): 127.0.0.1:4723
DEBUG	2023-01-09 11:17:14,061	[connectionpool.py:465]	http://127.0.0.1:4723 "POST /wd/hub/session HTTP/1.1" 404 3691
DEBUG	2023-01-09 11:17:14,061	[remote_connection.py:330]	Remote response: status=404 | data={"value":{"error":"invalid session id","message":"The session identified by c018f84f-e89c-4e05-8c61-c28f23aece70 is not known","stacktrace":"io.appium.uiautomator2.common.exceptions.NoSuchDriverException: The session identified by c018f84f-e89c-4e05-8c61-c28f23aece70 is not known\n\tat io.appium.uiautomator2.handler.request.SafeRequestHandler.handle(SafeRequestHandler.java:54)\n\tat io.appium.uiautomator2.server.AppiumServlet.handleRequest(AppiumServlet.java:266)\n\tat io.appium.uiautomator2.server.AppiumServlet.handleHttpRequest(AppiumServlet.java:260)\n\tat io.appium.uiautomator2.http.ServerHandler.channelRead(ServerHandler.java:68)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:435)\n\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:293)\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:267)\n\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:250)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:266)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1294)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:611)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:552)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:466)\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:438)\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:140)\n\tat io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)\n\tat java.lang.Thread.run(Thread.java:761)\n"}} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '3691', 'ETag': 'W/"e6b-c4h+0iX12kxyuAjx/FngpyI+MT8"', 'Date': 'Mon, 09 Jan 2023 03:17:14 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})
DEBUG	2023-01-09 11:17:14,064	[remote_connection.py:358]	Finished Request
INFO	2023-01-09 11:17:16,217	[Server.py:42]	['appium -p 4723  -U 127.0.0.1:21503', 'appium -p 4740  -U 127.0.0.1:21513']
DEBUG	2023-01-09 11:17:18,450	[remote_connection.py:308]	POST http://127.0.0.1:4723/wd/hub/session {"capabilities": {"firstMatch": [{}], "alwaysMatch": {"platformName": "Android", "appium:deviceName": "127.0.0.1:21503", "appium:platformVersion": "7.1.2", "appium:appPackage": "com.tal.kaoyan", "appium:appActivity": "ui.activity.SplashActivity", "appium:noReset": false, "appium:unicodeKeyboard": true, "appium:resetKeyboard": true, "appium:automationName": "uiautomator2"}}}
DEBUG	2023-01-09 11:17:18,451	[connectionpool.py:232]	Starting new HTTP connection (1): 127.0.0.1:4723
DEBUG	2023-01-09 11:17:23,349	[connectionpool.py:465]	http://127.0.0.1:4723 "POST /wd/hub/session HTTP/1.1" 404 3691
DEBUG	2023-01-09 11:17:23,349	[remote_connection.py:330]	Remote response: status=404 | data={"value":{"error":"invalid session id","message":"The session identified by f8d47c7e-e1a0-46ae-8cbf-da6c167c8b05 is not known","stacktrace":"io.appium.uiautomator2.common.exceptions.NoSuchDriverException: The session identified by f8d47c7e-e1a0-46ae-8cbf-da6c167c8b05 is not known\n\tat io.appium.uiautomator2.handler.request.SafeRequestHandler.handle(SafeRequestHandler.java:54)\n\tat io.appium.uiautomator2.server.AppiumServlet.handleRequest(AppiumServlet.java:266)\n\tat io.appium.uiautomator2.server.AppiumServlet.handleHttpRequest(AppiumServlet.java:260)\n\tat io.appium.uiautomator2.http.ServerHandler.channelRead(ServerHandler.java:68)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:435)\n\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:293)\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:267)\n\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:250)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:266)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1294)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:611)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:552)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:466)\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:438)\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:140)\n\tat io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)\n\tat java.lang.Thread.run(Thread.java:761)\n"}} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '3691', 'ETag': 'W/"e6b-dS031QUHJBXmsphKRihXbA//Wv0"', 'Date': 'Mon, 09 Jan 2023 03:17:23 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})
DEBUG	2023-01-09 11:17:23,350	[remote_connection.py:358]	Finished Request
INFO	2023-01-09 11:24:09,848	[Server.py:42]	['appium -p 4723  -U 127.0.0.1:21503', 'appium -p 4740  -U 127.0.0.1:21513']
DEBUG	2023-01-09 11:24:11,037	[remote_connection.py:308]	POST http://127.0.0.1:4723/wd/hub/session {"capabilities": {"firstMatch": [{}], "alwaysMatch": {"platformName": "Android", "appium:deviceName": "127.0.0.1:21503", "appium:platformVersion": "7.1.2", "appium:appPackage": "com.tal.kaoyan", "appium:appActivity": "ui.activity.SplashActivity", "appium:noReset": false, "appium:unicodeKeyboard": true, "appium:resetKeyboard": true, "appium:automationName": "uiautomator2"}}}
DEBUG	2023-01-09 11:24:11,038	[connectionpool.py:232]	Starting new HTTP connection (1): 127.0.0.1:4723
DEBUG	2023-01-09 11:24:18,509	[connectionpool.py:465]	http://127.0.0.1:4723 "POST /wd/hub/session HTTP/1.1" 404 3691
DEBUG	2023-01-09 11:24:18,509	[remote_connection.py:330]	Remote response: status=404 | data={"value":{"error":"invalid session id","message":"The session identified by 7464b18c-918b-4038-991d-61d7f81f52af is not known","stacktrace":"io.appium.uiautomator2.common.exceptions.NoSuchDriverException: The session identified by 7464b18c-918b-4038-991d-61d7f81f52af is not known\n\tat io.appium.uiautomator2.handler.request.SafeRequestHandler.handle(SafeRequestHandler.java:54)\n\tat io.appium.uiautomator2.server.AppiumServlet.handleRequest(AppiumServlet.java:266)\n\tat io.appium.uiautomator2.server.AppiumServlet.handleHttpRequest(AppiumServlet.java:260)\n\tat io.appium.uiautomator2.http.ServerHandler.channelRead(ServerHandler.java:68)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:435)\n\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:293)\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:267)\n\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:250)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:266)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1294)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:611)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:552)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:466)\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:438)\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:140)\n\tat io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)\n\tat java.lang.Thread.run(Thread.java:761)\n"}} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '3691', 'ETag': 'W/"e6b-+9s7pcIzSoYuLJTXbAe6IOqWoMI"', 'Date': 'Mon, 09 Jan 2023 03:24:18 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})
DEBUG	2023-01-09 11:24:18,514	[remote_connection.py:358]	Finished Request
INFO	2023-01-09 11:24:20,679	[Server.py:42]	['appium -p 4723  -U 127.0.0.1:21503', 'appium -p 4740  -U 127.0.0.1:21513']
DEBUG	2023-01-09 11:24:21,950	[remote_connection.py:308]	POST http://127.0.0.1:4723/wd/hub/session {"capabilities": {"firstMatch": [{}], "alwaysMatch": {"platformName": "Android", "appium:deviceName": "127.0.0.1:21503", "appium:platformVersion": "7.1.2", "appium:appPackage": "com.tal.kaoyan", "appium:appActivity": "ui.activity.SplashActivity", "appium:noReset": false, "appium:unicodeKeyboard": true, "appium:resetKeyboard": true, "appium:automationName": "uiautomator2"}}}
DEBUG	2023-01-09 11:24:21,950	[connectionpool.py:232]	Starting new HTTP connection (1): 127.0.0.1:4723
DEBUG	2023-01-09 11:24:27,116	[connectionpool.py:465]	http://127.0.0.1:4723 "POST /wd/hub/session HTTP/1.1" 404 3691
DEBUG	2023-01-09 11:24:27,116	[remote_connection.py:330]	Remote response: status=404 | data={"value":{"error":"invalid session id","message":"The session identified by a5d11511-834f-41f3-96b8-2c50f6d3ee16 is not known","stacktrace":"io.appium.uiautomator2.common.exceptions.NoSuchDriverException: The session identified by a5d11511-834f-41f3-96b8-2c50f6d3ee16 is not known\n\tat io.appium.uiautomator2.handler.request.SafeRequestHandler.handle(SafeRequestHandler.java:54)\n\tat io.appium.uiautomator2.server.AppiumServlet.handleRequest(AppiumServlet.java:266)\n\tat io.appium.uiautomator2.server.AppiumServlet.handleHttpRequest(AppiumServlet.java:260)\n\tat io.appium.uiautomator2.http.ServerHandler.channelRead(ServerHandler.java:68)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:435)\n\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:293)\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:267)\n\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:250)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:266)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1294)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:611)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:552)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:466)\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:438)\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:140)\n\tat io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)\n\tat java.lang.Thread.run(Thread.java:761)\n"}} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '3691', 'ETag': 'W/"e6b-WH6E+uQNGWmc8cGYk3UnOcNyxHA"', 'Date': 'Mon, 09 Jan 2023 03:24:27 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})
DEBUG	2023-01-09 11:24:27,117	[remote_connection.py:358]	Finished Request
