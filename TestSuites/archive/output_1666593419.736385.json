{"content": {"suites": {"0": {"status": {"total_pass": 3, "total_skip": 2, "total_xpass": 1, "total_xfail": 3, "total_rerun": 0, "total_fail": 4, "total_error": 2}, "tests": {"0": {"status": "ERROR", "message": "file F:\\pythonLearn\\com\\yang\\practice100\\POM\\TestSuites\\test_demo.py, line 34\n      def test_001(self,login):\nE       fixture 'login' not found\n>       available fixtures: _Class__pytest_setup_class, _Class__pytest_setup_method, _pytest_bdd_example, _session_faker, _skip_sensitive, _verify_url, base_url, cache, capabilities, capfd, capfdbinary, caplog, capsys, capsysbinary, chrome_options, doctest_namespace, driver, driver_args, driver_class, driver_kwargs, driver_log, driver_path, edge_options, extra, faker, firefox_options, include_metadata_in_junit_xml, metadata, monkeypatch, pytestbdd_given_trace, pytestbdd_then_trace, pytestbdd_when_trace, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, selenium, sensitive_url, session_capabilities, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, variables, worker_id\n>       use 'pytest --fixtures [testpath]' for help on them.\n\nF:\\pythonLearn\\com\\yang\\practice100\\POM\\TestSuites\\test_demo.py:34\n", "test_name": "test_001", "rerun": "0"}, "1": {"status": "xFAIL", "message": "   assert 2 == 3", "test_name": "test_002", "rerun": "0"}, "2": {"status": "SKIP", "message": "('F:\\\\pythonLearn\\\\com\\\\yang\\\\practice100\\\\POM\\\\TestSuites\\\\test_demo.py', 45, 'Skipped: \u5728linux\u4e0a\u8fd0\u884c\uff0c\u8df3\u8fc7Windows')", "test_name": "test_003", "rerun": "0"}, "3": {"status": "SKIP", "message": "('F:\\\\pythonLearn\\\\com\\\\yang\\\\practice100\\\\POM\\\\TestSuites\\\\test_demo.py', 51, 'Skipped: \u7528\u4f8b\u8df3\u8fc7\u539f\u56e0****')", "test_name": "test_004", "rerun": "0"}, "4": {"status": "xPASS", "message": "", "test_name": "test_005", "rerun": "0"}, "5": {"status": "PASS", "message": "", "test_name": "test_006", "rerun": "0"}, "6": {"status": "PASS", "message": "", "test_name": "test_007", "rerun": "0"}, "7": {"status": "ERROR", "message": "file F:\\pythonLearn\\com\\yang\\practice100\\POM\\TestSuites\\test_demo.py, line 73\n      @pytest.mark.run(order=3)\n      def test_008(self,browser):\nE       fixture 'browser' not found\n>       available fixtures: _Class__pytest_setup_class, _Class__pytest_setup_method, _pytest_bdd_example, _session_faker, _skip_sensitive, _verify_url, base_url, cache, capabilities, capfd, capfdbinary, caplog, capsys, capsysbinary, chrome_options, doctest_namespace, driver, driver_args, driver_class, driver_kwargs, driver_log, driver_path, edge_options, extra, faker, firefox_options, include_metadata_in_junit_xml, metadata, monkeypatch, pytestbdd_given_trace, pytestbdd_then_trace, pytestbdd_when_trace, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, selenium, sensitive_url, session_capabilities, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, variables, worker_id\n>       use 'pytest --fixtures [testpath]' for help on them.\n\nF:\\pythonLearn\\com\\yang\\practice100\\POM\\TestSuites\\test_demo.py:73\n", "test_name": "test_008", "rerun": "0"}, "8": {"status": "FAIL", "message": "   assert 3 == 2\n", "test_name": "test_009", "rerun": "0"}, "9": {"status": "FAIL", "message": "   assert 3 == 2\n", "test_name": "test_009", "rerun": "0"}, "10": {"status": "FAIL", "message": "   assert 3 == 2\n", "test_name": "test_009", "rerun": "0"}, "11": {"status": "FAIL", "message": "   assert 3 == 2\n", "test_name": "test_009", "rerun": "0"}, "12": {"status": "PASS", "message": "", "test_name": "test_010", "rerun": "0"}}, "suite_name": "test_demo.py"}}}, "date": "October 24, 2022", "start_time": 1666593178.656381, "total_suite": 1, "status": "FAIL", "status_list": {"pass": "3", "fail": "4", "skip": "2", "error": "2", "xpass": "1", "xfail": "3", "rerun": "0"}, "total_tests": "15"}